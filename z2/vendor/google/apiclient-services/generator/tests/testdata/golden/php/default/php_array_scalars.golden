=== begin: PhpArrayScalars.php
<?php
/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

namespace Google\Service;

use Google\Client;

/**
 * Service definition for PhpArrayScalars (v1).
 *
 * <p>
 * verifying the PHP float primitive type</p>
 *
 * <p>
 * For more information about this service, see the API
 * <a href="" target="_blank">Documentation</a>
 * </p>
 *
 * @author Google, Inc.
 */
class PhpArrayScalars extends \Google\Service
{
  /** A non googleapis.com scope. */
  const MAIL_GOOGLE_COM =
      "https://mail.google.com/";
  /** a product level scope. */
  const PRODUCT =
      "https://www.googleapis.com/auth/product";
  /** A typical scope. */
  const USERINFO_EMAIL =
      "https://www.googleapis.com/auth/userinfo.email";

  public $getwitharrays;
  public $rootUrlTemplate;

  /**
   * Constructs the internal representation of the PhpArrayScalars service.
   *
   * @param Client|array $clientOrConfig The client used to deliver requests, or a
   *                                     config array to pass to a new Client instance.
   * @param string $rootUrl The root URL used for requests to the service.
   */
  public function __construct($clientOrConfig = [], $rootUrl = null)
  {
    parent::__construct($clientOrConfig);
    $this->rootUrl = $rootUrl ?: 'https://www.googleapis.com/';
    $this->rootUrlTemplate = $rootUrl ?: 'https://www.UNIVERSE_DOMAIN/';
    $this->servicePath = 'php_float_type/v1/';
    $this->version = 'v1';
    $this->serviceName = 'php_array_scalars';

    $this->getwitharrays = new PhpArrayScalars\Resource\Getwitharrays(
        $this,
        $this->serviceName,
        'getwitharrays',
        [
          'methods' => [
            'get' => [
              'path' => 'arrays',
              'httpMethod' => 'GET',
              'parameters' => [],
            ],
          ]
        ]
    );
  }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PhpArrayScalars::class, 'Google_Service_PhpArrayScalars');
=== end: PhpArrayScalars.php
=== begin: PhpArrayScalars/ObjectWithScalarArrays.php
<?php
/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

namespace Google\Service\PhpArrayScalars;

class ObjectWithScalarArrays extends \Google\Collection
{
  protected $collection_key = 'arrayOfStrings';
  /**
   * @var bool[]
   */
  public $arrayOfBooleans;
  /**
   * @var float[]
   */
  public $arrayOfFloats;
  /**
   * @var int[]
   */
  public $arrayOfIntegers;
  /**
   * @var string[]
   */
  public $arrayOfStrings;

  /**
   * @param bool[]
   */
  public function setArrayOfBooleans($arrayOfBooleans)
  {
    $this->arrayOfBooleans = $arrayOfBooleans;
  }
  /**
   * @return bool[]
   */
  public function getArrayOfBooleans()
  {
    return $this->arrayOfBooleans;
  }
  /**
   * @param float[]
   */
  public function setArrayOfFloats($arrayOfFloats)
  {
    $this->arrayOfFloats = $arrayOfFloats;
  }
  /**
   * @return float[]
   */
  public function getArrayOfFloats()
  {
    return $this->arrayOfFloats;
  }
  /**
   * @param int[]
   */
  public function setArrayOfIntegers($arrayOfIntegers)
  {
    $this->arrayOfIntegers = $arrayOfIntegers;
  }
  /**
   * @return int[]
   */
  public function getArrayOfIntegers()
  {
    return $this->arrayOfIntegers;
  }
  /**
   * @param string[]
   */
  public function setArrayOfStrings($arrayOfStrings)
  {
    $this->arrayOfStrings = $arrayOfStrings;
  }
  /**
   * @return string[]
   */
  public function getArrayOfStrings()
  {
    return $this->arrayOfStrings;
  }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ObjectWithScalarArrays::class, 'Google_Service_PhpArrayScalars_ObjectWithScalarArrays');
=== end: PhpArrayScalars/ObjectWithScalarArrays.php
=== begin: PhpArrayScalars/Resource/Getwitharrays.php
<?php
/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

namespace Google\Service\PhpArrayScalars\Resource;

use Google\Service\PhpArrayScalars\ObjectWithArrays;

/**
 * The "getwitharrays" collection of methods.
 * Typical usage is:
 *  <code>
 *   $php_array_scalarsService = new Google\Service\PhpArrayScalars(...);
 *   $getwitharrays = $php_array_scalarsService->getwitharrays;
 *  </code>
 */
class Getwitharrays extends \Google\Service\Resource
{
  /**
   * returns an object arrays of scalars (getwitharrays.get)
   *
   * @param array $optParams Optional parameters.
   * @return ObjectWithArrays
   * @throws \Google\Service\Exception
   */
  public function get($optParams = [])
  {
    $params = [];
    $params = array_merge($params, $optParams);
    return $this->call('get', [$params], ObjectWithArrays::class);
  }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Getwitharrays::class, 'Google_Service_PhpArrayScalars_Resource_Getwitharrays');
=== end: PhpArrayScalars/Resource/Getwitharrays.php
